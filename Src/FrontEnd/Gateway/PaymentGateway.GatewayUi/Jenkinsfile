pipeline{
    agent any

    environment {
        CONTAINER_NAME = "paymentuicontV$BUILD_NUMBER"
        IMAGE_NAME = "eshghi26/paygateui:V$BUILD_NUMBER"
        DOCKERHUB_CREDENTIALS = 'dockerhubcred'
        DOCKERHUB_REPO = 'eshghi26/paygateui'
    }

    stages {
        stage('Fetch Code') {
            steps {
                git url: 'git@github.com:eshghi26/paygate.git',
                branch: 'main',
                credentialsId: 'mygitubpk'
            }
        }

        stage('Build Docker Image'){
            steps {
                script {
                    dockerImage = docker.build(IMAGE_NAME, "-f Src/FrontEnd/Gateway/PaymentGateway.GatewayUi/Dockerfile .")
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('', DOCKERHUB_CREDENTIALS) {
                        dockerImage.push("V$BUILD_NUMBER")
                    }
                }
            }
        }

        stage('Delete Image from Jenkins') {
            steps {
                sh "docker rmi $DOCKERHUB_REPO:V$BUILD_NUMBER"
            }
        }

        stage('Delete Previous Container') {
            steps {
                script {
                    // Check if the container exists and stop it if running
                    sh """
                    if [ \$(docker ps -a -q -f name=$CONTAINER_NAME) ]; then
                        echo "Stopping and removing existing container..."
                        docker stop $CONTAINER_NAME || true
                        docker rm $CONTAINER_NAME || true
                    else
                        echo "No previous container found."
                    fi
                    """
                }
            }
        }

        stage('Deploy Latest Container') {
            steps {
                sh "docker run --name $CONTAINER_NAME -dp 0.0.0.0:6060:8080 $IMAGE_NAME"
            }
        }
    }

}
